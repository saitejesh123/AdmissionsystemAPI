// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hellosas.Data;

namespace hellosas.Migrations
{
    [DbContext(typeof(hellosasContext))]
    partial class hellosasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("hellosas.Controllers.Models.admissioninfo", b =>
                {
                    b.Property<int>("addid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<int>("studid")
                        .HasColumnType("int");

                    b.HasKey("addid");

                    b.HasIndex("courseid");

                    b.HasIndex("studid");

                    b.ToTable("admissioninfo");
                });

            modelBuilder.Entity("hellosas.Controllers.Models.course", b =>
                {
                    b.Property<int>("courseid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("coursefees")
                        .HasColumnType("int");

                    b.Property<string>("coursename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("courseid");

                    b.ToTable("course");
                });

            modelBuilder.Entity("hellosas.Controllers.Models.stdinfo", b =>
                {
                    b.Property<int>("stdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("confirm_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("phoneno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stdname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usertype")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("stdid");

                    b.ToTable("stdinfo");
                });

            modelBuilder.Entity("hellosas.Controllers.Models.admissioninfo", b =>
                {
                    b.HasOne("hellosas.Controllers.Models.course", "course")
                        .WithMany()
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hellosas.Controllers.Models.stdinfo", "stdinfo")
                        .WithMany()
                        .HasForeignKey("studid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
